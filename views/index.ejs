<script>
    let map;
    let marker;
    let seguirCentrando = false;
    let recorrido = [];
    let polyline;

    // üîπ Detectamos si estamos en testeo o producci√≥n
    const basePath = window.location.pathname.includes("/test") ? "/test" : "";

    function obtenerDatosIniciales() {
        return fetch(`${basePath}/data`)
            .then(res => res.json())
            .catch(err => {
                console.error("‚ùå Error obteniendo datos iniciales:", err);
                return null;
            });
    }

    fetch(`${basePath}/api-key`)  // üîπ Se ajusta la ruta de la API Key din√°micamente
        .then(res => res.json())
        .then(data => {
            if (!data.apiKey) {
                throw new Error("No se recibi√≥ la API key");
            }

            obtenerDatosIniciales().then(ubicacion => {
                if (!ubicacion || !ubicacion.LATITUDE || !ubicacion.LONGITUDE) {
                    document.getElementById("map").innerText = "No se pudo obtener la posici√≥n inicial.";
                    return;
                }

                const script = document.createElement("script");
                script.src = `https://maps.googleapis.com/maps/api/js?key=${data.apiKey}&callback=initMap`;
                script.async = true;

                window.posicionInicial = {
                    lat: parseFloat(ubicacion.LATITUDE),
                    lng: parseFloat(ubicacion.LONGITUDE)
                };

                recorrido.push(window.posicionInicial);
                document.head.appendChild(script);
            });
        })
        .catch(err => {
            console.error("‚ùå Error al obtener la API key:", err);
            document.getElementById("map").innerText = "No se pudo cargar el mapa.";
        });

    function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            center: window.posicionInicial,
            zoom: 15
        });

        marker = new google.maps.Marker({
            position: window.posicionInicial,
            map: map,
            title: "Taxi üöï",
            icon: {
                url: "https://cdn-icons-png.flaticon.com/128/2401/2401174.png",
                scaledSize: new google.maps.Size(50, 50)
            }
        });

        polyline = new google.maps.Polyline({
            path: recorrido,
            geodesic: true,
            strokeColor: "#FF0000",
            strokeOpacity: 1.0,
            strokeWeight: 4,
        });

        polyline.setMap(map);

        document.getElementById("seguirBtn").addEventListener("click", () => {
            seguirCentrando = true;
            centrarEnTaxi();
        });

        map.addListener('dragstart', () => {
            seguirCentrando = false;
        });

        actualizarDatos();
        setInterval(actualizarDatos, 5000);
    }

    function actualizarDatos() {
        fetch(`${basePath}/data`)  // üîπ Ajustamos la URL de los datos din√°micamente
            .then(res => res.json())
            .then(data => {
                document.getElementById("longitud").textContent = data.LONGITUDE || "N/A";
                document.getElementById("latitud").textContent = data.LATITUDE || "N/A";
                document.getElementById("fecha").textContent = data.DATE || "N/A";
                document.getElementById("tiempo").textContent = data.TIME || "N/A";

                if (data.LATITUDE && data.LONGITUDE) {
                    const nuevaPosicion = {
                        lat: parseFloat(data.LATITUDE),
                        lng: parseFloat(data.LONGITUDE)
                    };

                    marker.setPosition(nuevaPosicion);
                    recorrido.push(nuevaPosicion);
                    polyline.setPath(recorrido);

                    if (seguirCentrando) {
                        centrarEnTaxi();
                    }
                }
            })
            .catch(err => {
                console.error("‚ùå Error obteniendo datos:", err);
            });
    }

    function centrarEnTaxi() {
        const posicion = marker.getPosition();
        if (posicion) {
            map.setCenter(posicion);
        }
    }
</script>
