<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title id="titulo">Proyecto 2 <%= title %></title>
    <style>
        /* üîπ Estilos Generales */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f2f2f2;
        }

        /* üîπ Navbar */
        .navbar {
            display: flex;
            justify-content: center;
            background-color: #333;
            padding: 15px 0;
        }

        .navbar a {
            color: white;
            text-decoration: none;
            padding: 15px 20px;
            font-size: 18px;
            transition: 0.3s;
        }

        .navbar a:hover, .navbar a.active {
            background-color: #4CAF50;
            border-radius: 5px;
        }

        /* üîπ Secciones */
        .section {
            display: none;
            padding: 20px;
        }

        .section.active {
            display: block;
            animation: fadeIn 0.5s ease-in-out;
        }

        /* üîπ Animaci√≥n */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* üîπ Mapas */
        .map-container {
            height: 70vh;
            width: 100%;
            border: 1px solid #ccc;
            margin-bottom: 15px;
        }

        /* üîπ Panel de informaci√≥n */
        .info-panel {
            background: white;
            padding: 15px;
            margin-bottom: 15px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
        }

        /* üîπ Formulario Hist√≥rico */
        .filter-form {
            background: white;
            padding: 15px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            margin-bottom: 15px;
        }

        .filter-form label, .filter-form input {
            display: block;
            margin: 5px 0;
            font-size: 16px;
        }

        .filter-form button, #seguirBtn {
            margin-top: 10px;
            padding: 8px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
            font-size: 16px;
            transition: 0.3s;
        }

        .filter-form button:hover, #seguirBtn:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>

    <!-- üîπ Navbar -->
    <div class="navbar">
        <a href="#" id="realTimeBtn" class="active">Real Time</a>
        <a href="#" id="historicalBtn">Historical</a>
    </div>

    <!-- üîπ Secci√≥n "Real Time" -->
    <div id="realTimeSection" class="section active">
        <h1>Real Time Tracking üöï</h1>
        <div class="info-panel">
            <p>Latitud: <span id="latitud">N/A</span></p>
            <p>Longitud: <span id="longitud">N/A</span></p>
            <p>Fecha: <span id="fecha">N/A</span></p>
            <p>Hora: <span id="tiempo">N/A</span></p>
            <button id="seguirBtn">Seguir Taxi</button>
        </div>
        <div id="mapRealTime" class="map-container">Cargando mapa en tiempo real...</div>
    </div>

    <!-- üîπ Secci√≥n "Historical" -->
    <div id="historicalSection" class="section">
        <h1>Historical Tracking üìÖ</h1>
        <div class="filter-form">
            <label for="startDate">Fecha y hora inicial:</label>
            <input type="datetime-local" id="startDate">

            <label for="endDate">Fecha y hora final:</label>
            <input type="datetime-local" id="endDate">

            <button id="loadHistory">Cargar Trayectoria</button>
        </div>
        <div id="mapHistorical" class="map-container">Cargando mapa hist√≥rico...</div>
    </div>

    <script>
        let realTimeMap;
        let historicalMap;
        let marker;
        let seguirCentrando = false;
        let recorrido = [];
        let polyline;
        let intervalId = null;
    
        function obtenerDatosIniciales() {
            return fetch("/data")
                .then(res => {
                    if (!res.ok) throw new Error("Error en la respuesta del servidor");
                    return res.json();
                })
                .catch(err => {
                    console.error("‚ùå Error obteniendo datos iniciales:", err);
                    return null;
                });
        }
    
        function cargarMapaTiempoReal() {
            fetch("/api-key")
                .then(res => {
                    if (!res.ok) throw new Error("Error al obtener API key");
                    return res.json();
                })
                .then(data => {
                    console.log("API Key recibida:", data.apiKey ? "‚úÖ" : "‚ùå");
                    if (!data.apiKey) {
                        throw new Error("No se recibi√≥ la API key");
                    }
    
                    return obtenerDatosIniciales().then(ubicacion => {
                        if (!ubicacion || !ubicacion.LATITUDE || !ubicacion.LONGITUDE) {
                            throw new Error("No se pudo obtener la posici√≥n inicial");
                        }
    
                        const script = document.createElement("script");
                        script.src = `https://maps.googleapis.com/maps/api/js?key=${data.apiKey}&callback=initRealTimeMap`;
                        script.async = true;
                        script.defer = true;
    
                        window.posicionInicial = {
                            lat: parseFloat(ubicacion.LATITUDE),
                            lng: parseFloat(ubicacion.LONGITUDE)
                        };
    
                        recorrido = [window.posicionInicial]; 
                        document.head.appendChild(script);
                    });
                })
                .catch(err => {
                    console.error("‚ùå Error al cargar el mapa:", err);
                    document.getElementById("mapRealTime").innerText = "Error al cargar el mapa: " + err.message;
                });
        }
    
        function initRealTimeMap() {
            console.log("Inicializando mapa tiempo real...");
            realTimeMap = new google.maps.Map(document.getElementById("mapRealTime"), {
                center: window.posicionInicial,
                zoom: 15
            });
    
            marker = new google.maps.Marker({
                position: window.posicionInicial,
                map: realTimeMap,
                title: "Taxi üöï",
                icon: {
                    url: "https://cdn-icons-png.flaticon.com/128/2401/2401174.png",
                    scaledSize: new google.maps.Size(50, 50)
                }
            });
    
            polyline = new google.maps.Polyline({
                path: recorrido,
                geodesic: true,
                strokeColor: "#FF0000",
                strokeOpacity: 1.0,
                strokeWeight: 4,
            });
    
            polyline.setMap(realTimeMap);
    
            document.getElementById("seguirBtn").addEventListener("click", () => {
                seguirCentrando = true;
                centrarEnTaxi();
            });
    
            realTimeMap.addListener('dragstart', () => {
                seguirCentrando = false;
            });
    
            actualizarDatos();
            intervalId = setInterval(actualizarDatos, 5000);
        }
    
        function actualizarDatos() {
            fetch("/data")
                .then(res => {
                    if (!res.ok) throw new Error("Error en la respuesta");
                    return res.json();
                })
                .then(data => {
                    if (!data.LATITUDE || !data.LONGITUDE) {
                        console.warn("‚ö† No se recibieron coordenadas v√°lidas.");
                        return;
                    }
    
                    // Actualizar panel de informaci√≥n
                    document.getElementById("longitud").textContent = data.LONGITUDE || "N/A";
                    document.getElementById("latitud").textContent = data.LATITUDE || "N/A";
                    document.getElementById("fecha").textContent = data.DATE || "N/A";
                    document.getElementById("tiempo").textContent = data.TIME || "N/A";
    
                    const nuevaPosicion = {
                        lat: parseFloat(data.LATITUDE),
                        lng: parseFloat(data.LONGITUDE)
                    };
    
                    // Actualizar marcador y ruta
                    marker.setPosition(nuevaPosicion);
                    recorrido.push(nuevaPosicion);
                    polyline.setPath(recorrido);
    
                    if (seguirCentrando) {
                        centrarEnTaxi();
                    }
                })
                .catch(err => {
                    console.error("‚ùå Error obteniendo datos:", err);
                });
        }
    
        function centrarEnTaxi() {
            const posicion = marker.getPosition();
            if (posicion) {
                realTimeMap.setCenter(posicion);
            }
        }
    
        // üîπ Manejo de la navegaci√≥n entre "Real Time" e "Historical"
        document.getElementById("realTimeBtn").addEventListener("click", function() {
            document.getElementById("realTimeSection").classList.add("active");
            document.getElementById("historicalSection").classList.remove("active");
            this.classList.add("active");
            document.getElementById("historicalBtn").classList.remove("active");
    
            // Si no se ha cargado el mapa, lo cargamos
            if (!realTimeMap) {
                cargarMapaTiempoReal();
            }
    
            // Reiniciar la actualizaci√≥n si se hab√≠a detenido
            if (!intervalId) {
                intervalId = setInterval(actualizarDatos, 5000);
            }
        });
    
        document.getElementById("historicalBtn").addEventListener("click", function() {
            document.getElementById("historicalSection").classList.add("active");
            document.getElementById("realTimeSection").classList.remove("active");
            this.classList.add("active");
            document.getElementById("realTimeBtn").classList.remove("active");
    
            // üîÑ Detener la actualizaci√≥n autom√°tica en modo hist√≥rico
            if (intervalId) {
                clearInterval(intervalId);
                intervalId = null;
            }
    
            // Cargar mapa hist√≥rico si no est√° cargado
            if (!historicalMap) {
                // Aqu√≠ ir√≠a la l√≥gica para cargar el mapa hist√≥rico
                document.getElementById("mapHistorical").innerText = "Funcionalidad hist√≥rica pendiente de implementar";
            }
        });
    
        // üîπ Cargar el mapa en tiempo real al iniciar
        cargarMapaTiempoReal();
    </script>
</body>
</html>