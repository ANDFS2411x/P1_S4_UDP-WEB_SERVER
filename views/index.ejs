<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title id="titulo">Proyecto 2 <%= title %>
    </title>
    <style>
        /* 🔹 Estilos Generales */
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 0;
            padding: 0;
            background-color: #f2f2f2;
        }

        /* 🔹 Navbar */
        .navbar {
            display: flex;
            justify-content: center;
            background-color: #333;
            padding: 15px 0;
        }

        .navbar a {
            color: white;
            text-decoration: none;
            padding: 15px 20px;
            font-size: 18px;
            transition: 0.3s;
        }

        .navbar a:hover,
        .navbar a.active {
            background-color: #4CAF50;
            border-radius: 5px;
        }

        /* 🔹 Secciones */
        .section {
            display: none;
            padding: 20px;
        }

        .section.active {
            display: block;
            animation: fadeIn 0.5s ease-in-out;
        }

        /* 🔹 Animación */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* 🔹 Mapas */
        .map-container {
            height: 70vh;
            width: 100%;
            border: 1px solid #ccc;
            margin-bottom: 15px;
        }

        /* 🔹 Panel de información */
        .info-panel {
            background: white;
            padding: 15px;
            margin: 15px auto;
            max-width: 600px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
        }

        .info-panel p {
            margin: 5px 0;
            text-align: left;
        }

        /* 🔹 Botones */
        .action-button {
            margin: 15px auto;
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: 0.3s;
            display: block;
        }

        .action-button:hover {
            background-color: #45a049;
        }

        /* 🔹 Formulario Histórico */
        .filter-form {
            background: white;
            padding: 15px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin: 0 auto 15px;
            max-width: 600px;
            border-radius: 5px;
        }

        .form-group {
            margin-bottom: 10px;
            text-align: left;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        .form-group input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }

        /* 🔹 Mensajes de error */
        .error-message {
            color: #d32f2f;
            background-color: #fde8e8;
            padding: 10px;
            border-radius: 4px;
            margin: 10px 0;
            display: none;
        }

        .map-container {
            min-height: 500px;
        }
    </style>
</head>

<body>

    <!-- 🔹 Navbar -->
    <div class="navbar">
        <a href="#" id="realTimeBtn" class="active">Real Time</a>
        <a href="#" id="historicalBtn">Historical</a>
    </div>

    <!-- 🔹 Sección "Real Time" -->
    <div id="realTime" class="section active">
        <h1>Real Time Tracking 🚕</h1>

        <!-- Panel de información -->
        <div class="info-panel">
            <p><strong>Latitud:</strong> <span id="latitud">N/A</span></p>
            <p><strong>Longitud:</strong> <span id="longitud">N/A</span></p>
            <p><strong>Fecha:</strong> <span id="fecha">N/A</span></p>
            <p><strong>Hora:</strong> <span id="tiempo">N/A</span></p>
        </div>

        <button id="seguirBtn" class="action-button">Seguir Taxi</button>
        <div id="mapContainer" class="map-container">Cargando mapa...</div>
        <div id="realTimeError" class="error-message"></div>
    </div>

    <!-- 🔹 Sección "Historical" -->
    <div id="historical" class="section">
        <h1>Historical Tracking 📅</h1>

        <div class="filter-form">
            <div class="form-group">
                <label for="startDate">Fecha y hora inicial:</label>
                <input type="datetime-local" id="startDate">
            </div>

            <div class="form-group">
                <label for="endDate">Fecha y hora final:</label>
                <input type="datetime-local" id="endDate">
            </div>

            <button id="loadHistory" class="action-button">Cargar Trayectoria</button>
        </div>

        <div id="historicalError" class="error-message"></div>
    </div>

    <script>
        // Configuración global
        const config = {
            basePath: window.location.pathname.includes("/test") ? "/test" : "",
            updateInterval: 5000
        };

        // Estado de la aplicación
        const appState = {
            // Unified Map
            map: null,
            marker: null,
            polyline: null,
            
            // Real Time
            realTime: {
                seguirCentrando: false,
                recorrido: [],
                intervalId: null
            },

            // Google Maps API
            mapsLoaded: false
        };

        // Elementos del DOM
        const domElements = {
            // Real Time
            realTimeBtn: document.getElementById('realTimeBtn'),
            historicalBtn: document.getElementById('historicalBtn'),
            realTimeSection: document.getElementById('realTime'),
            historicalSection: document.getElementById('historical'),
            mapContainer: document.getElementById('mapContainer'),
            seguirBtn: document.getElementById('seguirBtn'),
            loadHistory: document.getElementById('loadHistory'),
            startDate: document.getElementById('startDate'),
            endDate: document.getElementById('endDate'),
            latitud: document.getElementById('latitud'),
            longitud: document.getElementById('longitud'),
            fecha: document.getElementById('fecha'),
            tiempo: document.getElementById('tiempo'),
            realTimeError: document.getElementById('realTimeError'),
            historicalError: document.getElementById('historicalError')
        };

        // Resto del código es igual al anterior, pero con algunas modificaciones para usar appState.map en lugar de separar mapas
        // Las funciones initRealTimeMap y initHistoricalMap ahora usan el mismo mapa
        // Limpiar polilínea y marcador al cambiar entre modos
        // ...

        // Las demás funciones permanecerían casi idénticas, solo ajustando referencias a map y polyline

        // Implementaré solo las funciones modificadas para mostrar el cambio

        function initMap(center) {
            console.log('Inicializando mapa unificado...');

            // Limpiar contenedor
            domElements.mapContainer.innerHTML = '';

            // Crear mapa
            appState.map = new google.maps.Map(domElements.mapContainer, {
                center: center,
                zoom: 15,
                streetViewControl: false
            });

            // Configurar eventos del mapa
            appState.map.addListener('dragstart', () => {
                appState.realTime.seguirCentrando = false;
            });
        }

        function prepareRealTimeMode() {
            // Limpiar polilínea histórica
            if (appState.polyline) {
                appState.polyline.setMap(null);
                appState.polyline = null;
            }

            // Crear polilínea para tiempo real
            appState.polyline = new google.maps.Polyline({
                path: appState.realTime.recorrido,
                geodesic: true,
                strokeColor: "#FF0000",
                strokeOpacity: 1.0,
                strokeWeight: 4,
                map: appState.map
            });

            // Crear marcador
            appState.marker = new google.maps.Marker({
                position: appState.realTime.recorrido[0],
                map: appState.map,
                title: "Taxi 🚕",
                icon: {
                    url: "https://cdn-icons-png.flaticon.com/128/2401/2401174.png",
                    scaledSize: new google.maps.Size(50, 50)
                }
            });
        }

        function prepareHistoricalMode() {
            // Limpiar marcador de tiempo real
            if (appState.marker) {
                appState.marker.setMap(null);
                appState.marker = null;
            }

            // Polilínea se creará en loadHistoricalData
        }

        // Las demás funciones permanecerían similares, 
        // solo cambiando referencias de mapas separados a appState.map
    </script>
</body>
</html>